name: 'Package'

on:
  push:
    tags:
      - 'v*.*.*'
env:     
  SOLUTION_NAME: FFF.MimeTypes.sln    
  CONFIGURATION: Release
  DOTNET_VERSION: '6.0.x'

jobs:
  build-package:
    runs-on: windows-latest
      
    steps:  
    - name: Checkout 
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
      
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_NAME }}
      
    - name: Build
      run: dotnet build ${{ env.SOLUTION_NAME }} --no-restore 
      env:
        Configuration: ${{ env.CONFIGURATION }}
    
    - name: Pack
      run: dotnet pack ${{ env.SOLUTION_NAME }} --no-build --output ./nupkgs

    - name: Push Package Into NuGet
      run: |
        $packageFiles = Get-ChildItem -Path "./nupkgs" -Filter "*.nupkg"
        foreach ($file in $packageFiles) {
          Write-Host "Pushing package $file..."
          dotnet nuget push $file.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json" --skip-duplicate
        }
      shell: pwsh
      if: success()
      
    # - name: Push generated package to GitHub registry
    #   run: |
    #     $username = "${{ github.actor }}"
    #     $password = "${{ secrets.GITHUB_TOKEN }}" 
    #     $feedEndpoint = "https://nuget.pkg.github.com/${{ github.actor }}/index.json"
    #     $env:NUGET_CREDENTIALPROVIDER_SESSIONTOKENCACHE_ENABLED = "true"
    #     $env:VSS_NUGET_EXTERNAL_FEED_ENDPOINTS = '{"endpointCredentials":[{"endpoint": $feedEndpoint,"username":$username,"password": $password}]}'
        
    #     # # Add the NuGet source with authentication
    #     # dotnet nuget sources Add -Name "GitHub" -Source "https://nuget.pkg.github.com/${{ github.actor }}/index.json" -Username $username -Password $password
        
    #     # # Push the package to GitHub Packages
    #     # dotnet nuget push "./nupkgs/*.nupkg" -Source "GitHub" -ApiKey $password

    #      # Add the NuGet source with authentication
    #     dotnet nuget add source "https://nuget.pkg.github.com/${{ github.actor }}/index.json" --name "GitHub" --username $username --password $password --store-password-in-clear-text
        
    #     # Push the package to GitHub Packages
    #     dotnet nuget push "./nupkgs/*.nupkg" --source "GitHub" --api-key $password 
    #   shell: pwsh
